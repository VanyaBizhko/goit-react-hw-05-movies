{"version":3,"file":"static/js/547.d4595ab7.chunk.js","mappings":"6OACA,EAAuB,mBAAvB,EAAiD,mB,SC8CjD,EA3Ca,WACX,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAwBR,OAtBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,+GAESC,MAAM,sCAAD,OACYJ,EADZ,2BAE1B,CACEK,QAAS,CACPC,cAAe,gOANP,cAERC,EAFQ,gBAUKA,EAASC,OAVd,OAURC,EAVQ,OAWdV,EAAQU,EAAKX,MAXC,kDAadY,QAAQC,MAAR,MAbc,0DAAH,qDAiBfR,GACD,GAAE,CAACH,KAIF,4BACE,kCACA,eAAIY,UAAWC,EAAf,SACGf,EAAKgB,OAAS,EACbhB,EAAKiB,KAAI,SAAAC,GAAK,OACV,gBAAIJ,UAAWC,EAAf,WAA2C,gBAAKI,MAAM,QAAQC,IAAG,yCAAoCF,EAAMG,cAAgBC,IAAKJ,EAAMK,QAAQ,8BAAML,EAAMK,QAA1J,KAAqK,6BAAKL,EAAMM,UAAX,SAApIN,EAAMO,GAD7B,KAKd,8DAKT,C,sBC7CD,SAASC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOtB,GAEP,YADAgB,EAAOhB,EAET,CAEIqB,EAAKE,KACPR,EAAQO,GAERE,QAAQT,QAAQO,GAAOG,KAAKR,EAAOC,EAEvC,CAEe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GAEzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CAEAhB,OAAMiB,EACR,GACF,CACF,C","sources":["webpack://react-homework-template/./src/components/Cast.module.css?f72c","components/Cast.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Cast_list__clFFB\",\"item\":\"Cast_item__o4G7Z\"};","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport styles from './Cast.module.css'\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n  \n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        const response = await fetch(\n          `https://api.themoviedb.org/3/movie/${movieId}/credits?language=en-US`,\n          {\n            headers: {\n              Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkZWY0Y2NjZDY0MzFjYzU0ZGNkMGNkODY3OGFlNDcyYiIsInN1YiI6IjY0ZWNkZjIxNTI1OGFlMDE0ZGYzYjlmMSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.fj6V8kGVcNSLQ9lVcLDEXkbsr-LYuyCeuhMjBSEqkLs',\n            },\n          }\n        );\n        const data = await response.json();\n        setCast(data.cast);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchCast();\n  }, [movieId]);\n\n  \n  return (\n    <div>\n      <h2>Cast</h2>\n      <ul className={styles.list}>\n        {cast.length > 0 ? (\n          cast.map(actor => (\n              <li className={styles.item} key={actor.id}><img width='100px' src={`https://image.tmdb.org/t/p/w500${actor.profile_path}`} alt={actor.name} /><h2> {actor.name}</h2> <p>\"{actor.character}\"</p></li>\n              \n          ))\n        ) : (\n          <p>No cast information available.</p>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["useState","cast","setCast","movieId","useParams","useEffect","fetchCast","fetch","headers","Authorization","response","json","data","console","error","className","styles","length","map","actor","width","src","profile_path","alt","name","character","id","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}